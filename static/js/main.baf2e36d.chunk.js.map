{"version":3,"sources":["components/Navbar.js","components/Header.js","components/About.js","components/Resume.js","components/PortfolioItem.js","components/Portfolio.js","components/Footer.js","resumeData.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","id","className","this","props","classOpacity","href","title","selected","Component","Header","resumeData","Fragment","name","style","color","fontFamily","role","roleDescription","socialLinks","map","item","key","url","target","rel","About","src","concat","profilepic","alt","aboutme","address","website","Resume","education","UniversityName","UniversityAlt","specialization","MonthOfPassing","YearOfPassing","Achievements","PorfolioItem","desc","demo","source","Porfolio","portfolio","i","PortfolioItem_PorfolioItem","imgurl","Footer","social","process","linkedinId","skillsDescription","skills","skillname","sectionPosY","App","_this","Object","classCallCheck","_super","call","scrollDown","scrollTop","document","documentElement","console","log","setState","navbarOpacity","currentSection","state","sections","getElementById","toConsumableArray","getElementsByTagName","images","loadedCount","length","addEventListener","offsetHeight","reduce","b","window","removeEventListener","Navbar_Navbar","Header_Header","About_About","Portfolio_Porfolio","Resume_Resume","Footer_Footer","Boolean","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.baf2e36d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nexport default class Navbar extends Component {\r\n    render() {\r\n        return (\r\n            <nav id=\"nav-wrap\" className={this.props.classOpacity}>\r\n                <a\r\n                    className=\"mobile-btn\"\r\n                    href=\"#nav-wrap\"\r\n                    title=\"Show navigation\"\r\n                >\r\n                    Show navigation\r\n                </a>\r\n                <a className=\"mobile-btn\" href=\"#\" title=\"Hide navigation\">\r\n                    Hide navigation\r\n                </a>\r\n                <ul id=\"nav\" className=\"nav\">\r\n                    <li className={this.props.selected[0]}><a className=\"smoothscroll\" href=\"#home\">Home</a></li>\r\n                    <li className={this.props.selected[1]}><a className=\"smoothscroll\" href=\"#about\">About</a></li>\r\n                    <li className={this.props.selected[2]}><a className=\"smoothscroll\" href=\"#portfolio\">Works</a></li>\r\n                    <li className={this.props.selected[3]}><a className=\"smoothscroll\" href=\"#resume\">Resume</a></li>\r\n                </ul>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nexport default class Header extends Component {\r\n  render() {\r\n    let resumeData = this.props.resumeData;\r\n    return (\r\n      <React.Fragment>\r\n      \r\n      <div className=\"parallax\"></div>\r\n      <div className=\"fixed\"></div>\r\n      <header id=\"home\">\r\n         <div className=\"row banner\">\r\n            <div className=\"banner-text\">\r\n               <h1 className=\"responsive-headline\">I am {resumeData.name}.</h1>\r\n               <h3 style={{color:'#fff', fontFamily:'sans-serif '}}>I am a {resumeData.role}. {resumeData.roleDescription}\r\n               </h3>\r\n               <hr/>\r\n               <ul className=\"social\">\r\n                  {\r\n                    resumeData.socialLinks && resumeData.socialLinks.map(item => {\r\n                      return (\r\n                        <li key={item.name}>\r\n                          <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\"><i className={item.className}></i></a>\r\n                        </li>\r\n                      )\r\n                    })\r\n                  }\r\n               </ul>\r\n            </div>\r\n         </div>\r\n         <p className=\"scrolldown\">\r\n            <a className=\"smoothscroll\" href=\"#about\"><i className=\"icon-down-circle\"></i></a>\r\n         </p>\r\n      </header>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class About extends Component {\r\n  render() {\r\n    let resumeData = this.props.resumeData;\r\n    return (\r\n      <section id=\"about\">\r\n         <div className=\"row\">\r\n\r\n            <div className=\"three columns\">\r\n\r\n               <img className=\"profile-pic\"  src={`${resumeData.profilepic}`} alt=\"\"></img>\r\n\r\n            </div>\r\n\r\n            <div className=\"nine columns main-col\">\r\n\r\n               <h2>About Me</h2>\r\n               <p>\r\n               {\r\n                 resumeData.aboutme\r\n               }\r\n               </p>\r\n\r\n               <div className=\"row\">\r\n\r\n                  <div className=\"columns contact-details\">\r\n\r\n                  <h2>Contact Details</h2>\r\n                  <p className=\"address\">\r\n       \t\t\t\t\t\t<span>{resumeData.name}</span>\r\n                     <br></br>\r\n       \t\t\t\t\t\t   <span>\r\n                     {resumeData.address}\r\n                    </span>\r\n                    <br></br>\r\n                    <span>{resumeData.website}</span>\r\n       \t\t\t\t\t   </p>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </section>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nexport default  class Resume extends Component {\r\n  render() {\r\n    let resumeData = this.props.resumeData;\r\n    return (\r\n      <section id=\"resume\">\r\n\r\n        <div className=\"row education\">\r\n\r\n            <div className=\"three columns header-col\">\r\n               <h1><span>Education</span></h1>\r\n            </div>\r\n\r\n            <div className=\"nine columns main-col\">\r\n              {\r\n                resumeData.education && resumeData.education.map((item)=>{\r\n                  return(\r\n                    <div className=\"row item\" key={item.UniversityName}>\r\n                       <div className=\"twelve columns\">\r\n                          <h3>{item.UniversityName}</h3>\r\n                          <h4>{item.UniversityAlt}</h4>\r\n                          <p className=\"info\">\r\n                          {item.specialization}\r\n                          <span>&bull;</span> <em className=\"date\">{item.MonthOfPassing} {item.YearOfPassing}</em></p>\r\n                          <p>\r\n                          {item.Achievements}\r\n                          </p>\r\n                       </div>\r\n                    </div>\r\n                  )\r\n                })\r\n              }\r\n            </div>\r\n        </div>\r\n\r\n        {/* <div className=\"row work\">\r\n            <div className=\"three columns header-col\">\r\n               <h1><span>Work</span></h1>\r\n            </div>\r\n            <div className=\"nine columns main-col\">\r\n              {\r\n                resumeData.work && resumeData.work.map((item) => {\r\n                  return(\r\n                    <div className=\"row item\">\r\n                       <div className=\"twelve columns\">\r\n                          <h3>{item.CompanyName}</h3>\r\n                          <p className=\"info\">\r\n                          {item.specialization}\r\n                          <span>&bull;</span> <em className=\"date\">{item.MonthOfLeaving} {item.YearOfLeaving}</em></p>\r\n                          <p>\r\n                          {item.Achievements}\r\n                          </p>\r\n                       </div>\r\n                    </div>\r\n                  )\r\n                })\r\n              }\r\n            </div> \r\n         </div> */}\r\n\r\n\r\n         {/* <div className=\"row skill\">\r\n            <div className=\"three columns header-col\">\r\n               <h1><span>Skills</span></h1>\r\n            </div>\r\n            <div className=\"nine columns main-col\">\r\n              <p>\r\n              {resumeData.skillsDescription}\r\n              </p>\r\n   \t\t\t\t    <div className=\"bars\">\r\n   \t\t\t\t       <ul className=\"skills\">\r\n                    {\r\n                      resumeData.skills && resumeData.skills.map((item) => {\r\n                        return(\r\n                          <li>\r\n                          <span className={`bar-expand ${item.skillname.toLowerCase()}`}>\r\n                          </span><em>{item.skillname}</em>\r\n                          </li>\r\n                        )\r\n                      })\r\n                    }\r\n   \t\t\t\t    \t</ul>\r\n   \t\t\t\t    </div>\r\n   \t\t\t    </div>\r\n          </div> */}\r\n      </section>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nexport default class PorfolioItem extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"portfolio-item-wrapper\">\r\n                <div className=\"column\">\r\n                    <div className=\"portfolio-item\">\r\n                        <img className=\"thumb\" src={`${this.props.src}`} alt={`${this.props.alt}`}/>\r\n                        <div id=\"name\">\r\n                            {this.props.name}\r\n                        </div>\r\n                        <div id=\"desc\">\r\n                            {this.props.desc}\r\n                        </div>\r\n                        <div id=\"buttons\" className=\"bgrid-halves s-bgrid-halves cf\">\r\n                            <a href={`${this.props.demo}`}><button id=\"demo\" className=\"button column centered\">Demo Project</button></a>\r\n                            <a href={`${this.props.source}`}><button id=\"view\" className=\"button column centered\">View Code</button></a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PortfolioItem from \"./PortfolioItem\";\r\nexport default class Porfolio extends Component {\r\n  render() {\r\n    let resumeData = this.props.resumeData;\r\n    return (\r\n      <section id=\"portfolio\">\r\n        <div className=\"row\">\r\n          <div className=\"twelve columns collapsed\">\r\n            <h1>Check Out Some of My Works.</h1>\r\n            <div id=\"portfolio-wrapper\" className=\"bgrid-thirds s-bgrid-thirds cf\">\r\n              {\r\n                resumeData.portfolio.map(i => (\r\n                  <PortfolioItem key={i.name} name={i.name} desc={i.desc} src={i.imgurl} demo={i.demo} source={i.source}/>\r\n                ))\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nexport default class Footer extends Component {\r\n  render() {\r\n    let resumeData = this.props.resumeData;\r\n    return (\r\n      <footer>\r\n      <div className=\"row\">\r\n        <div className=\"twelve columns\">\r\n          <ul className=\"social-links\">\r\n            {\r\n              resumeData.socialLinks && resumeData.socialLinks.map((item)=>{\r\n                return(\r\n                  <li key={item.name}>\r\n                    <a href={item.url}>\r\n                    <i className={item.className} />\r\n                    </a>\r\n                  </li>\r\n                )\r\n              })\r\n            }\r\n          </ul>\r\n          \r\n        </div>\r\n        <div id=\"go-top\"><a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\"><i className=\"icon-up-open\" /></a></div>\r\n      </div>\r\n    </footer>\r\n    );\r\n  }\r\n}","const social = {\r\n    \"linkedin\": \"https://www.linkedin.com/in/cruz-james/\",\r\n    \"github\": \"https://github.com/jamesc2000\",\r\n    \"website\": \"https://jamesc2000.github.io/React-Portfolio/\"\r\n}\r\n\r\nlet resumeData = {\r\n    name: \"James Laurence Cruz\",\r\n    role: \"Frontend Developer\",\r\n    profilepic: `${process.env.PUBLIC_URL}/images/profilepic.jpg`,\r\n    linkedinId: \"https://www.linkedin.com/in/cruz-james/\",\r\n    roleDescription:\r\n        \"I like dabbling in various parts of frontend development and like to learn about new technologies, write technical articles or simply play games in my free time.\",\r\n    socialLinks: [\r\n        {\r\n            name: \"linkedin\",\r\n            url: social.linkedin,\r\n            className: \"fa fa-linkedin\"\r\n        },\r\n        {\r\n            name: \"github\",\r\n            url: social.github,\r\n            className: \"fa fa-github\"\r\n        }\r\n    ],\r\n    aboutme:\r\n        \"I am currently a student of Pamantasan ng Lungsod ng Maynila (PLM), and aspiring to be a software developer in the future. As of now, I currently do freelance work, and work on my personal projects to further enhance my skills as a developer.\",\r\n    address: \"Philippines\",\r\n    website: social.website,\r\n    education: [\r\n        {\r\n            UniversityName: \"Pamantasan ng Lungsod ng Maynila\",\r\n            UniversityAlt: \"(University of the City of Manila)\",\r\n            specialization: \"Bachelor of Science Major in Computer Engineering\",\r\n            MonthOfPassing: \"May\",\r\n            YearOfPassing: \"2022\"\r\n        },\r\n        {\r\n            UniversityName: \"Lyceum of the Philippines University - Cavite\",\r\n            specialization: \"Academic Track - STEM\",\r\n            MonthOfPassing: \"May\",\r\n            YearOfPassing: \"2019\",\r\n            Achievements: \"With Honors\"\r\n        }\r\n    ],\r\n    // \"work\":[\r\n    //   {\r\n    //     \"CompanyName\":\"Some Company\",\r\n    //     \"specialization\":\"Some specialization\",\r\n    //     \"MonthOfLeaving\":\"Jan\",\r\n    //     \"YearOfLeaving\":\"2018\",\r\n    //     \"Achievements\":\"Some Achievements\"\r\n    //   },\r\n    // ],\r\n    \"skillsDescription\":\"Your skills here\",\r\n    \"skills\":[\r\n      {\r\n        \"skillname\":\"HTML5\"\r\n      },\r\n      {\r\n        \"skillname\":\"CSS\"\r\n      },\r\n      {\r\n        \"skillname\":\"Reactjs\"\r\n      }\r\n    ],\r\n    \"portfolio\":[\r\n      {\r\n        \"name\":\"Rock Paper Scissors\",\r\n        \"desc\":\"A simple rock paper scissors app built with plain bootstrap for the frontend and express.js and WebSockets for the backend\",\r\n        \"imgurl\":`${process.env.PUBLIC_URL}/images/portfolio/rockpaperscissors.png`,\r\n        \"demo\": \"http://rockpaperscissors-server-app.herokuapp.com/\",\r\n        \"source\": \"https://github.com/jamesc2000/rockpaperscissors\"\r\n      },\r\n      {\r\n        \"name\":\"csnotehub.com\",\r\n        \"desc\":\"A tutorial website for those interested in programming. Built with React and Gatsby, responsive, and fast.\",\r\n        \"imgurl\": `${process.env.PUBLIC_URL}/images/portfolio/csnotehub.png`,\r\n        \"demo\": \"https://csnotehub.com\",\r\n        \"source\": \"https://github.com/jamesc2000/csnotehub\"\r\n      }\r\n    ],\r\n};\r\n\r\nexport default resumeData;\r\n","import React, { Component } from 'react';\r\nimport Navbar from './components/Navbar'\r\nimport Header from './components/Header';\r\nimport About from './components/About';\r\nimport Resume from './components/Resume';\r\nimport Portfolio from './components/Portfolio';\r\n// import Testimonials from  './components/Testimonials';\r\n// import ContactUs from './components/ContactUs';\r\nimport Footer from './components/Footer';\r\nimport resumeData from './resumeData';\r\n\r\nvar sectionHeights = []\r\nvar sectionPosY = []\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      navbarOpacity: '',\r\n      currentSection: ['current', '', '', '', '']\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    let sections = [document.getElementById('home'), ...document.getElementsByTagName('section')]\r\n    \r\n    let images = document.getElementsByTagName('img')     // Check if all images are done loading\r\n    var loadedCount = 0                                   // by adding an event listener to each image\r\n    for (let i=0; i < images.length; i++) {               // then increment a counter for each image loaded\r\n      images[i].addEventListener('load', () => {          // then compare it to the number of images in the page\r\n        loadedCount++\r\n        if (loadedCount === images.length-1) {\r\n          sectionHeights = sections.map(sections => (sections.offsetHeight))\r\n          sectionHeights.reduce(function (a,b,i) {return sectionPosY[i] = a + b}, 0)\r\n        }\r\n      })\r\n    }\r\n    window.addEventListener('scroll', this.scrollDown)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('scroll', this.scrollDown)\r\n  }\r\n\r\n  scrollDown = () => {\r\n    let scrollTop = document.documentElement.scrollTop\r\n    console.log(scrollTop)\r\n    if (scrollTop < sectionPosY[0]) {\r\n      this.setState({\r\n        navbarOpacity: '',\r\n        currentSection: ['current', '', '', '', '']\r\n      })\r\n    } else if (sectionPosY[0] < scrollTop && scrollTop < sectionPosY[1]) {\r\n      this.setState({\r\n        navbarOpacity: 'opaque',\r\n        currentSection: ['', 'current', '', '', '']\r\n      })\r\n\r\n    } else if (sectionPosY[1] < scrollTop && scrollTop < sectionPosY[2]) {\r\n      this.setState({\r\n        navbarOpacity: 'opaque',\r\n        currentSection: ['', '', 'current', '', '']\r\n      })\r\n\r\n    } else if (sectionPosY[2] < scrollTop && scrollTop < sectionPosY[3]) {\r\n      this.setState({\r\n        navbarOpacity: 'opaque',\r\n        currentSection: ['', '', '', 'current', '']\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Navbar classOpacity={this.state.navbarOpacity} selected={this.state.currentSection}/>\r\n        <Header resumeData={resumeData}/>\r\n        <About resumeData={resumeData}/>\r\n        <Portfolio resumeData={resumeData}/>\r\n        <Resume resumeData={resumeData}/>\r\n        {/* <ContactUs resumeData={resumeData}/> */}\r\n        <Footer resumeData={resumeData}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}